{"version":3,"sources":["tab-panel.js","about.js","download.js","download-btn.js","App.js","index.js"],"names":["TabPanel","props","children","currTabIndex","tabIndex","other","className","hidden","Box","p","About","source","Download","DownloadBtn","Button","component","variant","color","href","src","width","style","paddingRight","App","scrollElToView","el","setTimeout","scrollIntoView","behavior","block","inline","handlePathChange","location","pathname","setState","getTabIndex","path","console","log","state","prevProps","this","tabsRef","Tabs","ref","value","onChange","handleTabChange","TabIndicatorProps","background","centered","Tab","Link","label","to","React","Component","ReactDOM","render","basename","document","getElementById"],"mappings":"6PAIe,SAASA,EAASC,GAAQ,IAChCC,EAA+CD,EAA/CC,SAAUC,EAAqCF,EAArCE,aAAcC,EAAuBH,EAAvBG,SAAaC,EADN,YACgBJ,EADhB,wCAEvC,OACC,uCACCK,UAAW,0BACXC,OAAQJ,IAAiBC,GACrBC,GAEHF,IAAiBC,GACjB,kBAACI,EAAA,EAAD,CAAKC,EAAG,GACNP,I,qBCsES,SAASQ,EAAMT,GAC7B,OACC,kBAACD,EAAD,CACCG,aAAcF,EAAME,aACpBC,SAAUH,EAAMG,UAEhB,kBAAC,IAAD,CACCO,OAtFM,ijGCgDK,SAASC,EAASX,GAChC,OACC,kBAACD,EAAD,CACCG,aAAcF,EAAME,aACpBC,SAAUH,EAAMG,UAEhB,kBAAC,IAAD,CAAeO,OAtDR,0jF,oBCIK,SAASE,EAAYZ,GACnC,OACC,uCAAKK,UAAU,gBAAmBL,GACjC,kBAACa,EAAA,EAAD,CAAQC,UAAU,IAAIC,QAAQ,YAAYC,MAAM,UAAUC,KALvC,2FAMlB,yBAAKC,IAPQ,sEAOOC,MAAO,GAAIC,MAAO,CAACC,aAAc,UADtD,mCCCH,IAIqBC,E,kDACnB,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAaRuB,eAAiB,SAAAC,GACXA,GACFC,YAAW,WACTD,EAAGE,eAAe,CAChBC,SAAU,SACVC,MAAO,QACPC,OAAQ,aAET,MAtBY,EA0BnBC,iBAAmB,WACJ,EAAK9B,MAAM+B,SAASC,SACjC,EAAKC,SAAS,CAAE9B,SAAU,EAAK+B,iBA5Bd,EA+BnBA,YAAc,WACZ,IAAMC,EAAO,EAAKnC,MAAM+B,SAASC,SAEjC,OADAI,QAAQC,IAAI,EAAKrC,MAAM+B,UArCT,WAsCVI,EACK,EAtCQ,cAuCNA,EACF,EAEF,GArCP,EAAKG,MAAQ,CACXnC,SAAU,EAAK+B,eAHA,E,+DAOAK,GACbA,EAAUR,SAASC,WAAaQ,KAAKxC,MAAM+B,SAASC,WACtDQ,KAAKV,mBACLU,KAAKjB,eAAeiB,KAAKC,Y,+BAgCnB,IAAD,OACP,OACE,yBAAKpC,UAAU,OACb,yBAAKA,UAAU,eACb,yBACEA,UAAU,SACVa,IArDS,oCAuDX,kBAACwB,EAAA,EAAD,CACEC,IAAK,SAAAnB,GAAQ,EAAKiB,QAAUjB,GAC5BT,QAAQ,YACR6B,MAAOJ,KAAKF,MAAMnC,SAClB0C,SAAUL,KAAKM,gBACfC,kBAAmB,CAAE3B,MAAO,CAAE4B,WAAY,YAC1CC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAKpC,UAAWqC,IAAMC,MAAM,QAAQC,GA9D9B,WA+DN,kBAACH,EAAA,EAAD,CAAKpC,UAAWqC,IAAMC,MAAM,WAAWC,GA9D9B,eAgEX,kBAACzC,EAAD,MACA,kBAACH,EAAD,CAAOP,aAAcsC,KAAKF,MAAMnC,SAAUA,SAAU,IACpD,kBAACQ,EAAD,CAAUT,aAAcsC,KAAKF,MAAMnC,SAAUA,SAAU,IACvD,kBAACS,EAAD,Y,GAjEuB0C,IAAMC,W,OCZvCC,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,IAAD,CAAOvB,KAAK,IACVsB,OAAQ,SAAAzD,GAAK,OAAI,kBAAC,EAAQA,OAG9B2D,SAASC,eAAe,U","file":"static/js/main.9456e683.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nexport default function TabPanel(props) {\n\tconst { children, currTabIndex, tabIndex, ...other } = props;\n\treturn (\n\t\t<div\n\t\t\tclassName={'tab-panel markdown-body'}\n\t\t\thidden={currTabIndex !== tabIndex}\n\t\t\t{...other}\n\t\t>\n\t\t\t{currTabIndex === tabIndex && (\n\t\t\t\t<Box p={3}>\n\t\t\t\t\t{children}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tcurrTabIndex: PropTypes.any.isRequired,\n\ttabIndex: PropTypes.any.isRequired,\n}","import React from 'react';\nimport TabPanel from './tab-panel';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown'\n\nconst text = `\n# Tabs Collage - a Google Chrome extension\nEasily navigate, manage and search your chrome tabs through a live \nupdated collage view of site screenshots for all your tabs.\n\nIf you are like me you most likely have up to 100 or more tabs open simultaneously in chrome \nespecially if you are doing research or am a programmer learning how to code.\nThese tabs may be in different windows so managing and finding your tabs is always a nightmare. \nTabs Collage solves this problem in a very neat way.\n\nThis is an open source project ([repo](https://github.com/ProfessorX737/tabs-collage))\n\n## Collage mode\n\nCollage mode is the default mode which is indicated by the highlighed tiles icon.\nIt shows a live collage of all sites currently opened. \nThe collage automagically resizes itself to give the best overview off all sites in the view.\n\nClick on any image to open that chrome tab. This will work even if the tab is on minimized window.\n\n![Collage_mode_image](https://i.imgur.com/7GUKwgK.png)\n\nYou can reorder the tabs and the collage will reorder its images correspondingly.\n\n## Organize your domains\n\nTabs Collage allows you to group your domains together into sub views like shown below:\n\n![sub_views_image](https://i.imgur.com/TSJQcUO.png)\n\nYou can create an unlimited number of sub views by clicking the split vertical and split horizontal\nbuttons. After creating the sub view you can drag tabs into it\n\n![](https://i.imgur.com/oTPmtAl.png)\n\nThe 'all' tab is the grouped view of all the tabs in the sub view.\n\n## Close all tabs under a domain\nClick the '(x)' button on a tab to close the tab as well as its results.\n![Close_domain_image](https://i.imgur.com/mCMLARq.png)\n\nAlternatively you can close individual sites by clicking the 'x' button on on an image:\n\n![close_site_image](https://i.imgur.com/OSNCwM7.png)\n\n## Easily search for tabs\n\nTabs Collage makes it easy to search for tabs by clicking the search icon.\n\n![tabs_collage_search](https://i.imgur.com/elErqiH.png)\n\nAlternatively to make a search more permanent you can create a search tab. \nClick on on the '+' icon and you will get a tab like this:\n![search_tab_image](https://i.imgur.com/kNUmx6B.png)\n\nPress enter to save your search as a tab. A search tab has two close buttons and does not have an icon.\nClick the 'x' button to close the search tab without closing its results.\n\n## List mode\n\nIf collage view is not enough you also have list mode by clicking the list icon on a view\n\nHover over the site titles or scroll and the background image will correspond to the focused site.\nOnce a site is in focus click anywhere or press 'Enter' and that site will open.\n\nAlternatively you can use the up and down keys to focus the the site above or below respectively.\n\n![list_mode_image](https://i.imgur.com/rODnqtw.png)\n\n### Closing sites in list mode\n\nPress the 'd' key on your keyboard to close the focused site or\nalternatively you can just click the 'x' icon to close a site.\n\n## Demo\nSee this youtube [video](https://youtu.be/UeOxUNdrzQA) for a run down of the features.\n\n`\n\nexport default function About(props) {\n\treturn (\n\t\t<TabPanel\n\t\t\tcurrTabIndex={props.currTabIndex}\n\t\t\ttabIndex={props.tabIndex}\n\t\t>\n\t\t\t<ReactMarkdown\n\t\t\t\tsource={text}\n\t\t\t/>\n\t\t</TabPanel>\n\t)\n}\n\nAbout.propTypes = {\n\tcurrTabIndex: PropTypes.any.isRequired,\n\ttabIndex: PropTypes.any.isRequired\n}\n\n","import React from 'react';\nimport TabPanel from './tab-panel';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown'\n\nconst text = `\n# Setup\n\nDownload using the link above or see option 2 or 3 below to download in developer mode.\n\n### Pin the extension\nPin this extension in the extensions drop down at the top right of the chrome tool bar like below\n![Extension_list_image](https://i.imgur.com/E27Plzy.png)\n\n### Create a key shortcut\nI also recommend creating a shortcut to access the extension more easily.\nYou can do this easily by going to [chrome://extensions/shortcuts](chrome://extensions/shortcuts) and typing a shortcut for Tabs Collage. E.g. Alt-C\n\n### Activating the extension\nEither use the shortcut you created above or click on the Tabs collage icon to open the extension page. Note: you can click this icon to easily get back to the extension page\n![Tabs_Collage_Icon_Pinned](https://i.imgur.com/d6ftZUV.png)\n\nNote: If there are tabs that existed before the extension was installed or tabs were restored from a previous session there will be loading window.\n\n### Option 2: Load the build folder into chrome \n\n1. [Download](https://github.com/ProfessorX737/tabs-collage/releases/download/v1.0.1/tabs-collage.zip) the zip file \n2. Unzip the file. This should produce a folder called 'build'\n3. Go to [chrome://extensions/](chrome://extensions/)\n4. Turn on developer mode switch at the top right of the page\n5. Click 'Load unpacked' button and select the build folder that you extracted\n![load_unpacked_image](https://i.imgur.com/xRSA7ZQ.png)\n\nFor more download options see the [release versions](https://github.com/ProfessorX737/tabs-collage/releases).\n\n### Option 3: Clone the project and build with yarn\nIf you want to make your own modifications or option 1 is not working you can use option 2.\n\n1. Install yarn and nodejs\n2. Clone the project at https://github.com/ProfessorX737/tabs-extension\n3. Type 'yarn install' in the project directory\n4. Type 'yarn build' in the project directory. This should create a build folder\n5. Go to 'chrome://extensions/' and turn on 'Developer mode' at the top right\n6. Click 'Load unpacked' and select the build folder that was created in step 4\n7. Click on 'Tabs Collage' in the extensions drop down at the top right of the chrome tool bar\n\n### Troubleshooting:\n- If you are restoring your chrome session your tabs may not be loaded so there will be no images shown. You may have to refresh the extension a few times.\n- If the extension is not updating try clicking the associated extension icon to activate it.\n- If there any sites that start with 'https://' or 'http://' and the image for that site is not found try refreshing the extension.\n\n`\n\nexport default function Download(props) {\n\treturn (\n\t\t<TabPanel\n\t\t\tcurrTabIndex={props.currTabIndex}\n\t\t\ttabIndex={props.tabIndex}\n\t\t>\n\t\t\t<ReactMarkdown source={text} />\n\t\t</TabPanel>\n\t)\n}\n\nDownload.propTypes = {\n\tcurrTabIndex: PropTypes.any.isRequired,\n\ttabIndex: PropTypes.any.isRequired\n}\n\n","import React from 'react';\nimport {\n\tButton,\n\tLink\n} from '@material-ui/core';\n\nconst ICON_URL = \"https://www.google.com/images/icons/product/chrome_web_store-32.png\";\nconst EXTENSION_URL = \"https://chrome.google.com/webstore/detail/tabs-collage/oojclknofkaanfacdbdknfogiakgfalg\";\n\nexport default function DownloadBtn(props) {\n\treturn (\n\t\t<div className=\"download-btn\" {...props}>\n\t\t\t<Button component=\"a\" variant=\"contained\" color=\"primary\" href={EXTENSION_URL}>\n\t\t\t\t<img src={ICON_URL} width={32} style={{paddingRight: '10px'}}/>\n\t\t\t\tDownload from chrome web store\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport './App.css';\nimport {\n  Tabs,\n  Tab,\n  Button\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport About from './about';\nimport Download from './download';\nimport 'github-markdown-css';\nimport DownloadBtn from './download-btn';\n\nconst headerImgSrc = \"https://i.imgur.com/H5I3BYP.png\";\nconst aboutPath = \"/about\";\nconst downloadPath = \"/download\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabIndex: this.getTabIndex()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      this.handlePathChange();\n      this.scrollElToView(this.tabsRef);\n    }\n  }\n\n  scrollElToView = el => {\n    if (el) {\n      setTimeout(() => {\n        el.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"start\",\n          inline: \"center\"\n        })\n      }, 100);\n    }\n  }\n\n  handlePathChange = () => {\n    const path = this.props.location.pathname;\n    this.setState({ tabIndex: this.getTabIndex() });\n  }\n\n  getTabIndex = () => {\n    const path = this.props.location.pathname;\n    console.log(this.props.location)\n    if (path === aboutPath) {\n      return 0;\n    } else if (path === downloadPath) {\n      return 1;\n    }\n    return 0;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"app-content\">\n          <img\n            className=\"header\"\n            src={headerImgSrc}\n          />\n          <Tabs\n            ref={el => { this.tabsRef = el }}\n            variant=\"fullWidth\"\n            value={this.state.tabIndex}\n            onChange={this.handleTabChange}\n            TabIndicatorProps={{ style: { background: '#272727' } }}\n            centered\n          >\n            <Tab component={Link} label=\"About\" to={aboutPath} />\n            <Tab component={Link} label=\"Download\" to={downloadPath} />\n          </Tabs>\n          <DownloadBtn/>\n          <About currTabIndex={this.state.tabIndex} tabIndex={0} />\n          <Download currTabIndex={this.state.tabIndex} tabIndex={1} />\n          <DownloadBtn/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename=\"/\">\n    <Route path=\"/\"\n      render={props => <App {...props} />}\n    />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}